

================================================================
== Vivado HLS Report for 'hls_divider'
================================================================
* Date:           Thu Mar 21 15:26:34 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hls_divider
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     4.649|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   19|   19|   19|   19|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.64>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%b_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %b) nounwind" [hls_divider/hls_divider.cpp:1]   --->   Operation 21 'read' 'b_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (1.00ns)   --->   "%a_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %a) nounwind" [hls_divider/hls_divider.cpp:1]   --->   Operation 22 'read' 'a_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 23 [20/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 23 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [20/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 24 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.64>
ST_2 : Operation 25 [19/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 25 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [19/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 26 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 27 [18/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 27 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [18/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 28 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.64>
ST_4 : Operation 29 [17/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 29 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 30 [17/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 30 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.64>
ST_5 : Operation 31 [16/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 31 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 32 [16/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 32 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.64>
ST_6 : Operation 33 [15/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 33 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 34 [15/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 34 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.64>
ST_7 : Operation 35 [14/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 35 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 36 [14/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 36 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.64>
ST_8 : Operation 37 [13/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 37 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 38 [13/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 38 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.64>
ST_9 : Operation 39 [12/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 39 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 40 [12/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 40 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.64>
ST_10 : Operation 41 [11/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 41 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 42 [11/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 42 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.64>
ST_11 : Operation 43 [10/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 43 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 44 [10/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 44 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.64>
ST_12 : Operation 45 [9/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 45 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 46 [9/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 46 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.64>
ST_13 : Operation 47 [8/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 47 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 48 [8/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 48 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.64>
ST_14 : Operation 49 [7/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 49 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 50 [7/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 50 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.64>
ST_15 : Operation 51 [6/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 51 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 52 [6/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 52 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.64>
ST_16 : Operation 53 [5/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 53 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 54 [5/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 54 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.64>
ST_17 : Operation 55 [4/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 55 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 56 [4/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 56 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.64>
ST_18 : Operation 57 [3/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 57 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 58 [3/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 58 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.64>
ST_19 : Operation 59 [2/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 59 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 60 [2/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 60 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.64>
ST_20 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %a) nounwind, !map !7"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %b) nounwind, !map !13"   --->   Operation 62 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !17"   --->   Operation 63 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @hls_divider_str) nounwind"   --->   Operation 64 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_divider/hls_divider.cpp:2]   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %a, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_divider/hls_divider.cpp:3]   --->   Operation 66 'specinterface' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %b, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_divider/hls_divider.cpp:4]   --->   Operation 67 'specinterface' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 68 [1/20] (3.64ns)   --->   "%div = udiv i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:6]   --->   Operation 68 'udiv' 'div' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 69 [1/20] (3.64ns)   --->   "%tmp_2 = urem i16 %a_read, %b_read" [hls_divider/hls_divider.cpp:7]   --->   Operation 69 'urem' 'tmp_2' <Predicate = true> <Delay = 3.64> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 70 [1/1] (0.00ns)   --->   "%r = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 %div, i16 %tmp_2)" [hls_divider/hls_divider.cpp:6]   --->   Operation 70 'bitconcatenate' 'r' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 71 [1/1] (0.00ns)   --->   "ret i32 %r" [hls_divider/hls_divider.cpp:10]   --->   Operation 71 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 4.65ns
The critical path consists of the following:
	s_axi read on port 'b' (hls_divider/hls_divider.cpp:1) [7]  (1 ns)
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 2>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 3>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 4>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 5>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 6>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 7>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 8>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 9>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 10>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 11>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 12>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 13>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 14>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 15>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 16>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 17>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 18>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 19>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)

 <State 20>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('div', hls_divider/hls_divider.cpp:6) [12]  (3.65 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
